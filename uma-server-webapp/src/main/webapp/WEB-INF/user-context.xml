<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2017 The MIT Internet Trust Consortium
   
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
   
      http://www.apache.org/licenses/LICENSE-2.0
   
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<!-- Support for external OIDC logins for claims gathering -->

	<mvc:view-controller path="/external_login" view-name="external_login" />
	
	<security:http pattern="/external_login**" use-expressions="true" entry-point-ref="http403EntryPoint">
		<security:intercept-url pattern="/external_login**" access="permitAll"/>	
	</security:http>

	<security:http disable-url-rewriting="true" use-expressions="true"
			auto-config="false" entry-point-ref="externalAuthenticationEntryPoint"
			pattern="/#{T(org.mitre.uma.web.ClaimsCollectionEndpoint).URL}**"> 

		<security:logout logout-url="/logout" />
		<security:expression-handler ref="oauthWebExpressionHandler" />
	</security:http>	

	<bean id="externalAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<constructor-arg type="java.lang.String" value="/openid_connect_login"/>
	</bean>

	<security:authentication-manager id="externalAuthenticationManager">
		<security:authentication-provider ref="externalAuthenticationProvider" />
	</security:authentication-manager>

	<bean id="externalAuthenticationProvider" class="org.mitre.openid.connect.client.OIDCAuthenticationProvider">
		<property name="authoritiesMapper">
			<bean class="org.mitre.uma.util.ExternalLoginAuthoritiesMapper" />
		</property>
	</bean>

	<bean id="externalAuthenticationFilter" class="org.mitre.openid.connect.client.OIDCAuthenticationFilter">
		<property name="authenticationManager" ref="externalAuthenticationManager" />

		<property name="issuerService" ref="hybridIssuerService" />
		<property name="serverConfigurationService" ref="dynamicServerConfigurationService" />
		<property name="clientConfigurationService" ref="dynamicClientConfigurationService" />
		<property name="authRequestOptionsService" ref="staticAuthRequestOptionsService" />
		<property name="authRequestUrlBuilder" ref="plainAuthRequestUrlBuilder" />
		
	</bean>

	<bean class="org.mitre.openid.connect.client.service.impl.HybridIssuerService" id="hybridIssuerService">
		<property name="loginPageUrl" value="external_login" />
	</bean>

	<bean class="org.mitre.openid.connect.client.service.impl.DynamicServerConfigurationService" id="dynamicServerConfigurationService" />

	<bean class="org.mitre.openid.connect.client.service.impl.DynamicRegistrationClientConfigurationService" id="dynamicClientConfigurationService">
		<property name="template">
			<bean class="org.mitre.oauth2.model.RegisteredClient">
				<property name="clientName" value="HealthAuth Authorization Server" />
				<property name="scope">
					<set value-type="java.lang.String">
						<value>openid</value>
						<value>profile</value>
						<value>email</value>
						<value>phone</value>
						<value>address</value>
					</set>
				</property>
				<property name="tokenEndpointAuthMethod" value="SECRET_BASIC" />
				<property name="redirectUris">
					<set>
						<value>#{configBean.issuer + "openid_connect_login"}</value>
					</set>
				</property>
			</bean>
		</property>
		<property name="registeredClientService">
			<bean class="org.mitre.uma.service.impl.JpaRegisteredClientService" />
		</property>
	</bean>

	<bean class="org.mitre.openid.connect.client.service.impl.StaticAuthRequestOptionsService" id="staticAuthRequestOptionsService" />

	<bean class="org.mitre.openid.connect.client.service.impl.PlainAuthRequestUrlBuilder" id="plainAuthRequestUrlBuilder" />


	<!-- Standard configuration -->

	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"/>
		</security:authentication-provider>
	</security:authentication-manager>
		
	<mvc:view-controller path="/login" view-name="login" />
	
	
	<!--<security:http pattern="/login**" use-expressions="true" entry-point-ref="http403EntryPoint">
		<security:intercept-url pattern="/login**" access="permitAll"/>	
	</security:http>-->

	<security:http authentication-manager-ref="authenticationManager">

		<security:intercept-url pattern="/authorize" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/**" access="permitAll" />

		<security:form-login login-page="/login" authentication-failure-url="/login?error=failure" authentication-success-handler-ref="authenticationTimeStamper" />
		<security:custom-filter before="PRE_AUTH_FILTER" ref="externalAuthenticationFilter" />
		<security:custom-filter ref="authRequestFilter" after="SECURITY_CONTEXT_FILTER" />
		<security:logout logout-url="/logout" />
		<security:anonymous />
		<security:expression-handler ref="oauthWebExpressionHandler" />
		<security:headers>
			<security:frame-options policy="DENY" />
		</security:headers>
		<security:csrf />
	</security:http>

</beans>
